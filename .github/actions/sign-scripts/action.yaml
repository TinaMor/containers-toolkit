# https://tech.nicolonsky.ch/github-actions-powershell-signing/

name: Sign PowerShell Scripts
description: Sign PowerShell scripts in the Containers-Toolkit repository

inputs:
  input_artifact_name:
    description: "Name of the artifact to sign"
    required: true
  output_artifact_name:
    description: "Name of the artifact to publish"
    required: true

runs:
  using: "composite"
  steps:
    - name: Import code signing certificate
      shell: powershell
      run: |
        $pfxCertFilePath = Join-Path -Path $PSScriptRoot -ChildPath "CodeSigningCertificate.pfx"
        Set-Content -Value $([System.Convert]::FromBase64String($env:BASE64_PFX)) -Path $pfxCertFilePath -Encoding Byte
        $codeSigningCert = Import-PfxCertificate -FilePath $pfxCertFilePath -Password $($env:PFX_PASSWORD | ConvertTo-SecureString -AsPlainText -Force) -CertStoreLocation Cert:\CurrentUser\My
      env:
        BASE64_PFX: ${{ secrets.BASE64_PFX }}
        PFX_PASSWORD: ${{ secrets.PFX_PASSWORD }}
    # - name: Check out repository
    #   uses: actions/checkout@v2

    - name: Download Container Toolkit scripts
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.input_artifact_name }}

    - name: Sign PowerShell scripts
      shell: powershell
      run: |
        # remove git dir from checked out repo
        Get-ChildItem -Path "." -Filter ".git*" -Force | ForEach-Object {Remove-Item -Path $_.FullName -Recurse -Force}
        # Get scripts to sign
        $scripts = Get-ChildItem -Path . -Recurse -ErrorAction Stop | Where-Object {$_.name -match "ps[d|m]?1(xml)?"}
        # load cert
        $codeSigningCert = Get-ChildItem Cert:\CurrentUser\My -CodeSigningCert | Select-Object -First 1
        foreach ($script in $scripts) {
            try {
                  $scriptContent = Get-Content -Path $script.FullName
                  Write-Output "Signing script `"$($script.Name)`" with certificate `"$($codeSigningCert.Thumbprint)`""
                  # sign script
                  $null = Set-AuthenticodeSignature -Certificate $codeSigningCert -FilePath $script.FullName -TimestampServer "http://timestamp.comodoca.com/rfc3161"
            }
            catch {
                Write-Error $_
            }
        }
    - name: Publish signed scripts to GitHub Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.output_artifact_name }}
        path: .
